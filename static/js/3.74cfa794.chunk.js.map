{"version":3,"file":"static/js/3.74cfa794.chunk.js","mappings":"iOAGO,MAAMA,EAAcC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kOAK3BC,G,aCGK,SAASC,IACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,GAC/BG,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASC,KAAKJ,OAClDK,GAAQJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASE,QAC9CC,GAAeL,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASC,KAAKE,eAC1DC,GAASC,EAAAA,EAAAA,UAAQ,KACX,CAAEH,QAAOL,UAElB,CAACA,EAAMK,IA4DV,OA3DAI,QAAQC,IAAIJ,IACZK,EAAAA,EAAAA,YAAU,KACOC,WACb,IAEE,OADAb,GAAU,GACFO,GACN,IAAK,aACH,MAAMO,QAAmBC,EAAAA,EAAAA,IAAcP,GACvC,OAAKM,GAKLjB,EAAQiB,QACRd,GAAU,KALRgB,MAAM,qCACNhB,GAAU,IAMd,IAAK,QACH,MAAMiB,QAAqBC,EAAAA,EAAAA,IAAgBV,GAC3C,OAAKS,GAKLpB,EAAQoB,QACRjB,GAAU,KALRgB,MAAM,qCACNhB,GAAU,IAMd,IAAK,SACH,MAAMmB,QAAsBC,EAAAA,EAAAA,IAAiBZ,GAC7C,OAAKW,GAKLtB,EAAQsB,QACRnB,GAAU,KALRgB,MAAM,qCACNhB,GAAU,IAMd,QACEgB,MAAM,sGAWZ,CAAE,MAAOK,GACPrB,GAAU,GACVU,QAAQW,MAAMA,EAAMC,QACtB,CAAC,QAEC,YADAtB,GAAU,EAEZ,GAEFuB,EAAQ,GACP,CAACf,EAAQD,KAGViB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAAAD,UACRE,EAAAA,EAAAA,MAACC,EAAa,CAAAH,SAAA,EACZE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CAAI,8CAASzB,MACbuB,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,OAAOL,SAAC,QACjB3B,GACCyB,EAAAA,EAAAA,KAAA,OAAAE,SAAK,iCAELF,EAAAA,EAAAA,KAAA,OAAAE,SACG9B,EAAKoC,QAAU,GACdR,EAAAA,EAAAA,KAAA,MAAAE,SACG9B,EAAKqC,KAAKrC,IAEPgC,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAK9B,EAAKK,QAEV2B,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CAAK,WAAS9B,EAAKsC,WACnBN,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CAAK,QAAM9B,EAAKuC,UAChBP,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CAAK,WAAS9B,EAAKwC,WACnBR,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CAAK,aAEF9B,EAAKyC,UAAUJ,KAAKK,IACnBV,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CAAK,MAAIY,YAEP,GAAAC,OAXI3C,EAAK4C,WAiBvBhB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qBAQnB,C","sources":["components/Projects/Projects.styled.jsx","components/Projects/Projects.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport fotoA from \"images/ventilation/Screenshot_9.png\";\n\nexport const ProjectsDiv = styled.div`\n  background-image: linear-gradient(\n      rgba(0, 0, 255, 0.5),\n      rgba(255, 255, 0, 0.5)\n    ),\n    url(${fotoA});\n  background-position: center;\n  background-size: cover;\n  width: 100%;\n  min-height: 630px;\n`;\n","import { Link } from \"react-router-dom\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { getObjectsAdmin, getAllObjects, getObjectsClient } from \"api/client\";\n\nimport { Container } from \"../stylesheet/Container.styled\";\n\nimport * as s from \"./Projects.styled\";\n// import * as reportWebVitals from \"reportWebVitals\";\n\nexport default function Projects() {\n  const [cast, setCast] = useState([]);\n  const [loding, setLoding] = useState(false);\n  const name = useSelector((state) => state.contacts.user.name);\n  const token = useSelector((state) => state.contacts.token);\n  const subscription = useSelector((state) => state.contacts.user.subscription);\n  const params = useMemo(() => {\n    const p = { token, name };\n    return p;\n  }, [name, token]);\n  console.log(subscription);\n  useEffect(() => {\n    const getApi = async () => {\n      try {\n        setLoding(true);\n        switch (subscription) {\n          case \"superadmin\":\n            const allObjects = await getAllObjects(params);\n            if (!allObjects) {\n              alert(\"sorry no information yetNONE\");\n              setLoding(false);\n              return;\n            }\n            setCast(allObjects);\n            setLoding(false);\n            return;\n          case \"admin\":\n            const objectsAdmin = await getObjectsAdmin(params);\n            if (!objectsAdmin) {\n              alert(\"sorry no information yetNONE\");\n              setLoding(false);\n              return;\n            }\n            setCast(objectsAdmin);\n            setLoding(false);\n            return;\n          case \"client\":\n            const objectsClient = await getObjectsClient(params);\n            if (!objectsClient) {\n              alert(\"sorry no information yetNONE\");\n              setLoding(false);\n              return;\n            }\n            setCast(objectsClient);\n            setLoding(false);\n            return;\n          default:\n            alert(\"Нет таких значений\");\n        }\n        // const data = await getObjectsAdmin(params);\n        // console.log(data);\n        // if (!data) {\n        //   alert(\"sorry no information yetNONE\");\n        //   setLoding(false);\n        //   return;\n        // }\n        // setCast(data);\n        // setLoding(false);\n      } catch (error) {\n        setLoding(false);\n        console.error(error.messeng);\n      } finally {\n        setLoding(false);\n        return;\n      }\n    };\n    getApi();\n  }, [params, subscription]);\n\n  return (\n    <>\n      <Container>\n        <s.ProjectsDiv>\n          <h1>Проэкты {name}</h1>\n          <Link to={\"/dmn\"}>DMN</Link>\n          {loding ? (\n            <div>loding data... please wait </div>\n          ) : (\n            <div>\n              {cast.length >= 1 ? (\n                <ul>\n                  {cast.map((cast) => {\n                    return (\n                      <li key={`${cast._id}`}>\n                        <h3>{cast.name}</h3>\n\n                        <div>client: {cast.client}</div>\n                        <div>tel: {cast.phone}</div>\n                        <div>adress: {cast.adress}</div>\n                        <div>\n                          adminName:\n                          {cast.adminName.map((admin) => (\n                            <div>__ {admin}</div>\n                          ))}\n                        </div>\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                <p>NOT DATA</p>\n              )}\n            </div>\n          )}\n        </s.ProjectsDiv>\n      </Container>\n    </>\n  );\n}\n"],"names":["ProjectsDiv","styled","div","_templateObject","_taggedTemplateLiteral","fotoA","Projects","cast","setCast","useState","loding","setLoding","name","useSelector","state","contacts","user","token","subscription","params","useMemo","console","log","useEffect","async","allObjects","getAllObjects","alert","objectsAdmin","getObjectsAdmin","objectsClient","getObjectsClient","error","messeng","getApi","_jsx","_Fragment","children","Container","_jsxs","s","Link","to","length","map","client","phone","adress","adminName","admin","concat","_id"],"sourceRoot":""}