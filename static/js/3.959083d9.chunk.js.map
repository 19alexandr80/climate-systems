{"version":3,"file":"static/js/3.959083d9.chunk.js","mappings":"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","sources":["components/Projects/Projects.styled.jsx","components/Projects/Projects.jsx"],"sourcesContent":["import styled from \"styled-components\";\n// import fotoA from \"images/ventilation/Screenshot_9.png\";\n\nexport const ProjectsDiv = styled.div`\n  background: linear-gradient(rgba(0, 0, 255, 0.5), rgba(255, 255, 0, 0.5));\n  background-position: center;\n  background-size: cover;\n  width: 100%;\n  min-height: 630px;\n`;\n// =================================================================\nexport const DropdownDiv = styled.div`\n  position: relative;\n  display: inline-block;\n  &:hover ~ .content {\n    display: block;\n  }\n`;\nexport const Dropbtn = styled.div`\n  padding: 8px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n  &:hover ~ .content {\n    display: block;\n  }\n`;\nexport const DropdownContent = styled.div`\n  display: none;\n  position: absolute;\n  right: 0;\n  border-radius: 5px;\n  background-color: gray;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n  :hover {\n    display: block;\n  }\n  div {\n    padding: 4px 8px;\n    text-decoration: none;\n    display: block;\n    &:hover {\n      background-color: #f1f1f1;\n    }\n  }\n`;\n// =====================================================\nexport const Ul = styled.ul`\n  margin-bottom: 0px;\n  padding-left: 10px;\n  list-style: none;\n`;\n","import { Link } from \"react-router-dom\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { getObjectsAdmin, getAllObjects, getObjectsClient } from \"api/client\";\n\nimport { Container } from \"../stylesheet/Container.styled\";\n\nimport * as s from \"./Projects.styled\";\n// import * as reportWebVitals from \"reportWebVitals\";\n\nexport default function Projects() {\n  const [cast, setCast] = useState([]);\n  const [loding, setLoding] = useState(false);\n  const name = useSelector((state) => state.contacts.user.name);\n  const token = useSelector((state) => state.contacts.token);\n  const subscription = useSelector((state) => state.contacts.user.subscription);\n  const params = useMemo(() => {\n    const p = { token, name };\n    return p;\n  }, [name, token]);\n  useEffect(() => {\n    const getApi = async () => {\n      try {\n        setLoding(true);\n        switch (subscription) {\n          case \"superadmin\":\n            const allObjects = await getAllObjects(params);\n            if (!allObjects) {\n              alert(\"sorry no information yetNONE\");\n              setLoding(false);\n              return;\n            }\n            setCast(allObjects);\n            setLoding(false);\n            return;\n          case \"admin\":\n            const objectsAdmin = await getObjectsAdmin(params);\n            if (!objectsAdmin) {\n              alert(\"sorry no information yetNONE\");\n              setLoding(false);\n              return;\n            }\n            setCast(objectsAdmin);\n            setLoding(false);\n            return;\n          case \"client\":\n            const objectsClient = await getObjectsClient(params);\n            if (!objectsClient) {\n              alert(\"sorry no information yetNONE\");\n              setLoding(false);\n              return;\n            }\n            setCast(objectsClient);\n            setLoding(false);\n            return;\n          default:\n            alert(\"Нет таких значений\");\n        }\n        // const data = await getObjectsAdmin(params);\n        // console.log(data);\n        // if (!data) {\n        //   alert(\"sorry no information yetNONE\");\n        //   setLoding(false);\n        //   return;\n        // }\n        // setCast(data);\n        // setLoding(false);\n      } catch (error) {\n        setLoding(false);\n        console.error(error.messeng);\n      } finally {\n        setLoding(false);\n        return;\n      }\n    };\n    getApi();\n  }, [params, subscription]);\n\n  return (\n    <>\n      <Container>\n        <s.ProjectsDiv>\n          <h1>Проэкты {name}</h1>\n          <Link to={\"/dmn\"}>DMN</Link>\n          {loding ? (\n            <div>loding data... please wait </div>\n          ) : (\n            <div>\n              {cast.length >= 1 ? (\n                <s.Ul>\n                  {cast.map((cast) => {\n                    return (\n                      <li key={`${cast._id}`}>\n                        <h3>{cast.name}</h3>\n\n                        <div>client: {cast.client}</div>\n                        <div>tel: {cast.phone}</div>\n                        <div>adress: {cast.adress}</div>\n                        <s.DropdownDiv>\n                          <s.Dropbtn>adminName:</s.Dropbtn>\n                          <s.DropdownContent\n                            style={{ left: 0 }}\n                            className=\"content\"\n                          >\n                            {cast.adminName.map((admin) => (\n                              <div key={admin}>{admin}</div>\n                            ))}\n                          </s.DropdownContent>\n                        </s.DropdownDiv>\n                      </li>\n                    );\n                  })}\n                </s.Ul>\n              ) : (\n                <p>NOT DATA</p>\n              )}\n            </div>\n          )}\n        </s.ProjectsDiv>\n      </Container>\n    </>\n  );\n}\n"],"names":["ProjectsDiv","styled","div","_templateObject","_taggedTemplateLiteral","DropdownDiv","_templateObject2","Dropbtn","_templateObject3","DropdownContent","_templateObject4","Ul","ul","_templateObject5","Projects","cast","setCast","useState","loding","setLoding","name","useSelector","state","contacts","user","token","subscription","params","useMemo","useEffect","async","allObjects","getAllObjects","alert","objectsAdmin","getObjectsAdmin","objectsClient","getObjectsClient","error","console","messeng","getApi","_jsx","_Fragment","children","Container","_jsxs","s","Link","to","length","map","client","phone","adress","style","left","className","adminName","admin","concat","_id"],"sourceRoot":""}