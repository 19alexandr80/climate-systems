{"version":3,"file":"static/js/276.9d3f9afb.chunk.js","mappings":"8MAQe,SAASA,IACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACzCG,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASC,KAAKJ,OAClDK,GAAQJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASE,SAC7CC,EAAQC,IAAaV,EAAAA,EAAAA,WAAS,IAC9BW,EAAUC,IAAeZ,EAAAA,EAAAA,UAAS,YAEnCa,EAAQC,IACZ,OAAQA,EAAEC,cAAcZ,MACtB,IAAK,WACHJ,EAAYe,EAAEC,cAAcC,OAC5B,MACF,IAAK,cACHd,EAAeY,EAAEC,cAAcC,OAKnC,EA+BF,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKhB,EAAK,WACTM,GACCW,EAAAA,EAAAA,KAACC,EAAAA,EAAe,KAEhBJ,EAAAA,EAAAA,MAAA,QAAMK,SAlCUC,UACpBT,EAAEU,iBACF,MAAMC,EAAS,CACbtB,OACAK,QACAV,WACA4B,YAAazB,GAEf,IACES,GAAU,GACV,MAAMiB,QAAcC,EAAAA,EAAAA,IAAc,IAAKH,IACvCI,MAAMF,EAAMpB,KAAKJ,KAAO,mBACxBO,GAAU,GACVX,EAAY,IACZG,EAAe,IACfU,EAAY,WACd,CAAE,MAAOkB,GACPD,MAAM,gPACNnB,GAAU,EACZ,GAekCS,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACEW,SAAUlB,EACVmB,KAAMrB,EACNR,KAAK,WACLa,MAAOlB,EACPmC,YAAY,WACZC,UAAQ,QAGZjB,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,gBAELC,EAAAA,EAAAA,KAAA,SACEW,SAAUlB,EACVmB,KAAMrB,EACNR,KAAK,cACLa,MAAOf,EACPgC,YAAY,eACZC,UAAQ,QAGZjB,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,iBAELC,EAAAA,EAAAA,KAAA,SAAOW,SAtCCjB,IACZA,EAAEqB,OAAOC,QACXxB,EAAY,QAGdA,EAAY,WAAW,EAiCYoB,KAAK,WAAW7B,KAAK,oBAElDiB,EAAAA,EAAAA,KAACiB,EAAAA,EAAa,CAACL,KAAK,SAASM,KAAM,wBAK7C,C","sources":["components/UserPage/UserPage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n\nimport ButtonFitback from \"components/ButtonFit/ButtonFit\";\nimport { LoaderHourglass } from \"components/Loader/Loader\";\n\nimport { changPassword } from \"api/api\";\n\nexport default function UserPage() {\n  const [password, setPassword] = useState(\"\");\n  const [passwordNew, setPasswordNew] = useState(\"\");\n  const name = useSelector((state) => state.contacts.user.name);\n  const token = useSelector((state) => state.contacts.token);\n  const [loding, setLoding] = useState(false);\n  const [passShow, setPassShow] = useState(\"password\");\n\n  const onCh = (e) => {\n    switch (e.currentTarget.name) {\n      case \"password\":\n        setPassword(e.currentTarget.value);\n        break;\n      case \"passwordNew\":\n        setPasswordNew(e.currentTarget.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const passwordChang = async (e) => {\n    e.preventDefault();\n    const params = {\n      name,\n      token,\n      password,\n      newPassword: passwordNew,\n    };\n    try {\n      setLoding(true);\n      const chPas = await changPassword({ ...params });\n      alert(chPas.user.name + \" password cheng\");\n      setLoding(false);\n      setPassword(\"\");\n      setPasswordNew(\"\");\n      setPassShow(\"password\");\n    } catch (error) {\n      alert(\"Что-то пошло не так, проверте введённые данные\");\n      setLoding(false);\n    }\n  };\n  const onChPass = (e) => {\n    if (e.target.checked) {\n      setPassShow(\"text\");\n      return;\n    }\n    setPassShow(\"password\");\n  };\n  return (\n    <>\n      <h1>{name} Page</h1>\n      {loding ? (\n        <LoaderHourglass />\n      ) : (\n        <form onSubmit={passwordChang}>\n          <label>\n            Password\n            <input\n              onChange={onCh}\n              type={passShow}\n              name=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              required\n            />\n          </label>\n          <label>\n            New password\n            <input\n              onChange={onCh}\n              type={passShow}\n              name=\"passwordNew\"\n              value={passwordNew}\n              placeholder=\"New Password\"\n              required\n            />\n          </label>\n          <label>\n            Show password\n            <input onChange={onChPass} type=\"checkbox\" name=\"passwordNew\" />\n          </label>\n          <ButtonFitback type=\"submit\" cont={\"Cheng Password\"} />\n        </form>\n      )}\n    </>\n  );\n}\n"],"names":["UserPage","password","setPassword","useState","passwordNew","setPasswordNew","name","useSelector","state","contacts","user","token","loding","setLoding","passShow","setPassShow","onCh","e","currentTarget","value","_jsxs","_Fragment","children","_jsx","LoaderHourglass","onSubmit","async","preventDefault","params","newPassword","chPas","changPassword","alert","error","onChange","type","placeholder","required","target","checked","ButtonFitback","cont"],"sourceRoot":""}